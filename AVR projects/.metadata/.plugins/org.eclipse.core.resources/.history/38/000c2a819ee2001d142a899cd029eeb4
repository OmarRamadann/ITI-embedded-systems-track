/*
 * RTOS_program.c
 *
 *  Created on: Apr 15, 2023
 *      Author: hp
 */
#include "RTOS_private.h"
#include "RTOS_config.h"
#include "Timer0/Timer0_interface.h"
//#include "Timer0/Timer0_register.h"
Timer_Prop timer1={Normal,8,Clk64,256,1000000,1000};
ModesTimer_Prop normal1;
task_type CreatTask (u8 periority,u16 periodicity,void (*taskPtrFunc)(void))
{
task_type Task;
Task.priority=periority;
Task.periodicity=periodicity;
Task.taskFUNC=taskPtrFunc;
System_Task[periority]=Task;
//return Task;
}


void RTOS_voidStart(void)
{
//	Set_Bit(SREG,7);
	//TIMER0_voidInit(Copy_mode, clk_scaler, Preload_Value)
//	TIMER0_voidINTEnable();
//	TIMER10_voidSetCallBackfn(scheduler);
	TIMER0_voidInit(&timer1, &normal1);
	Timer_Enable(&timer1);
	TIMER0_voidSetCallBackfn(scheduler);

}

static void scheduler (void)
{
static u16 SystemTickCounter=0;
SystemTickCounter++;
for (u8 taskCounter=0;taskCounter<Task_Num;taskCounter++)
{
	if (SystemTickCounter%System_Task[taskCounter].periodicity==0)
	{
		if (System_Task[taskCounter].taskFUNC!=Null)
		{
		System_Task[taskCounter].taskFUNC();
		}
		}
}

}
